1. On app.html add the following ion-menu tag

<ion-menu [content]="nav">
    <ion-header>
        <ion-toolbar>
            <ion-title>Menu</ion-title>
        </ion-toolbar>
    </ion-header>

    <ion-content>
        <ion-list>
            <button ion-item (click)="onLoad(tabsPage)">
                <ion-icon name="quote" item-left>Quotes</ion-icon>
            </button>
            <button ion-item (click)="onLoad(settingsPage)">
                <ion-icon name="settings" item-left>Settings</ion-icon>
            </button>
        </ion-list>
    </ion-content>
</ion-menu>

<ion-nav [root]="tabsPage" #nav></ion-nav>

This says, Render ion-menu content on page assigned to local variable nav which is tabsPage.

On app.component.ts

export class MyApp {
  tabsPage = TabsPage;
  settingsPage = SettingsPage;

  @ViewChild('nav') nav: NavController;

  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen,
               private menuCtrl: MenuController) {
    platform.ready().then(() => {
      // Okay, so the platform is ready and our plugins are available.
      // Here you can do any higher level native things you might need.
      statusBar.styleDefault();
      splashScreen.hide();
    });
  }

  onLoad(page: any){
    this.nav.setRoot(page);
    this.menuCtrl.close();
  }

@ViewChild('nav') says to grab the variable 'nav' declared in app.html

On adding buttons on NavBar use <ion-buttons> inside <ion-navbar>

<ion-navbar>
    <ion-buttons float-start>
      <button ion-button>
        <ion-icon name="menu"></ion-icon>
      </button>
    </ion-buttons>
    <ion-title>Favourite Quotes</ion-title>
  </ion-navbar>

float-start adjusts title with button on same line and button aligns to left

